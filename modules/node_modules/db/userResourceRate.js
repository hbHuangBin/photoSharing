var util = require('util'),
	Document = require('./document.js'),
	Collection = require('./collection.js'),
	CONST = require('./const.js'),
	VERSION = CONST.VERSION;

module.exports = UserResourceRate;

function UserResourceRate (user_id, resource_id, rate, timestamp) {

	this.user_id = user_id;
	this.resource_id = resource_id;
	this.rate = rate;
	this.timestamp = timestamp;
	this.version = VERSION;

	Document.call(this, UserResourceRate._collectionName, UserResourceRate._transformDBResult);
	return this;
}
util.inherits(UserResourceRate, Document);

/* static properties */
UserResourceRate._collectionName = 'userResourceRates';
UserResourceRate._transformDBResult = function (result) {
	var ret;

	ret = new UserResourceRate(result.user_id, result.resource_id, result.rate, result.timestamp);
	ret._copyDBResult(result);

	return ret;
};
UserResourceRate.getCollection = Collection.getCollection.bind(null, UserResourceRate._collectionName);
UserResourceRate.findForEach = Collection.findForEach.bind(null, UserResourceRate._collectionName, UserResourceRate._transformDBResult);
UserResourceRate.findOne = Collection.findOne.bind(null, UserResourceRate._collectionName, UserResourceRate._transformDBResult);

/* overwrite the _validate function */
UserResourceRate.prototype._validate = function () {
	if (typeof this.user_id === 'string' &&
		typeof this.resource_id === 'string' &&
		typeof this.rate === 'number' &&
		typeof this.timestamp === 'number') {
		return true;
	} else {
		return false;
	}
};
