var util = require('util'),
	Document = require('./document.js'),
	Collection = require('./collection.js'),
	CONST = require('./const.js'),
	VERSION = CONST.VERSION;

module.exports = Album;

function Album (uuid, name, description, user_id, timestamp) {

	this.uuid = uuid;
	this.name = name;
	this.description = description;
	this.user_id = user_id;
	this.timestamp = timestamp;
	this.version = VERSION;

	Document.call(this, Album._collectionName, Album._transformDBResult);
	return this;
}
util.inherits(Album, Document);

/* static properties */
Album._collectionName = 'albums';
Album._transformDBResult = function (result) {
	var ret;

	ret = new Album(result.uuid, result.name, result.description,
					result.user_id, result.timestamp);
	ret._copyDBResult(result);

	return ret;
};
Album.getCollection = Collection.getCollection.bind(null, Album._collectionName);
Album.findForEach = Collection.findForEach.bind(null, Album._collectionName, Album._transformDBResult);
Album.findOne = Collection.findOne.bind(null, Album._collectionName, Album._transformDBResult);

/* overwrite the _validate function */
Album.prototype._validate = function () {
	if (typeof this.uuid === 'string' &&
		typeof this.name === 'string' &&
		typeof this.description === 'string' &&
		typeof this.user_id === 'string' &&
		typeof this.timestamp === 'number') {
		return true;
	} else {
		return false;
	}
};
